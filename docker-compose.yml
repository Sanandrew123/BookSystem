version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: library_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: library_db
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: library_user
      MYSQL_PASSWORD: library_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - library_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: library_backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/library_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: library_user
      SPRING_DATASOURCE_PASSWORD: library_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET: myVerySecureJWTSecretKeyForProduction
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    networks:
      - library_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: library_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - library_network

volumes:
  mysql_data:

networks:
  library_network:
    driver: bridge